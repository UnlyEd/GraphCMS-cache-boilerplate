{
  "name": "gcms-cache-boilerplate",
  "description": "",
  "license": "MIT",
  "version": "2.2.1",
  "scripts": {
    "sls:dotenv": "NODE_ENV=${NODE_ENV:-development}; sls dotenv",
    "sls:login": "serverless login",
    "start": "yarn delete:redis && cross-env-shell 'concurrently -p '{name}' -n 'redis,server,eslint' -c 'gray.bgWhite,yellow.bgBlue,orange.bgWhite' \"yarn start:redis\" \"yarn start:server\" \"yarn lint\"'",
    "start:server": "NODE_ENV=${NODE_ENV:-development}; SLS_DEBUG=* yarn sls:dotenv && serverless offline start",
    "emulate:local": "NODE_ENV=development; yarn sls:dotenv && node -r esm -r dotenv/config src/cli/index.js dotenv_config_path=./.serverless/.env",
    "create:redis": "NODE_ENV=${NODE_ENV:-development}; (docker run --name cache_tfp_redis_${NODE_ENV} -d -p 6379:6379 redis redis-server --requirepass localpass || true) && yarn stop:redis ;",
    "start:redis": "NODE_ENV=${NODE_ENV:-development}; yarn create:redis ; docker start -a cache_tfp_redis_${NODE_ENV}",
    "start:redis:daemon": "NODE_ENV=${NODE_ENV:-development}; yarn create:redis && docker start cache_tfp_redis_${NODE_ENV}",
    "stop:redis": "NODE_ENV=${NODE_ENV:-development}; docker stop cache_tfp_redis_${NODE_ENV}",
    "delete:redis": "NODE_ENV=${NODE_ENV:-development}; yarn stop:redis && docker rm cache_tfp_redis_${NODE_ENV} -f || true",
    "flush:redis": "NODE_ENV=${NODE_ENV:-development}; export `cat .env.${NODE_ENV} | sed -e '/^[ \\t]*#/d' | tr -d ' '` && REDIS_PORT=`echo $REDIS_URL | cut -d':' -f2` && echo FLUSHALL | npx redis-cli -h `echo $REDIS_URL | cut -d':' -f1` -a $REDIS_PASSWORD -p $REDIS_PORT",
    "deploy:all:all": "yarn deploy:all && yarn deploy:all:production",
    "deploy:all": "yarn deploy:demo && yarn deploy:skema && yarn deploy:gem && yarn deploy:essec",
    "deploy:all:production": "yarn deploy:demo:production && yarn deploy:skema:production && yarn deploy:gem:production && yarn deploy:essec:production",
    "deploy": "yarn deploy:demo",
    "check:demo": "NODE_ENV=staging sls print -s demoStaging",
    "check:demo:production": "NODE_ENV=production sls print -s demo",
    "deploy:demo": "NODE_ENV=staging sls deploy -s demoStaging",
    "deploy:demo:production": "NODE_ENV=production sls deploy -s demo",
    "emulate:demo": "NODE_ENV=staging yarn sls:dotenv -s demoStaging && node -r esm -r dotenv/config src/cli/index.js dotenv_config_path=./.serverless/.env",
    "emulate:demo:production": "NODE_ENV=production yarn sls:dotenv -s demo && node -r esm -r dotenv/config src/cli/index.js dotenv_config_path=./.serverless/.env",
    "logs:demo:cache-query": "NODE_ENV=staging sls logs -f cache-query -s demoStaging",
    "logs:demo:cache-query:production": "NODE_ENV=production sls logs -f cache-query -s demo",
    "logs:demo:refresh-cache": "NODE_ENV=staging sls logs -f refresh-cache -s demoStaging",
    "logs:demo:refresh-cache:production": "NODE_ENV=production sls logs -f refresh-cache -s demo",
    "logs:demo:read-cache": "NODE_ENV=staging sls logs -f read-cache -s demoStaging",
    "logs:demo:read-cache:production": "NODE_ENV=production sls logs -f read-cache -s demo",
    "logs:demo:status": "NODE_ENV=staging sls logs -f status -s demoStaging",
    "logs:demo:status:production": "NODE_ENV=production sls logs -f status -s demo",
    "create:demo": "NODE_ENV=staging sls create_domain -s demoStaging",
    "create:demo:production": "NODE_ENV=production sls create_domain -s demo",
    "remove:demo": "NODE_ENV=staging sls remove -s demoStaging",
    "remove:demo:production": "NODE_ENV=production sls remove -s demo",
    "info:demo": "NODE_ENV=staging sls info -s demoStaging",
    "info:demo:production": "NODE_ENV=production sls info -s demo",
    "preversion": "yarn doc:toc && yarn lint:once && yarn test:once",
    "release": "yarn bump --prompt --commit --tag && git add CHANGELOG.md README.md && git commit --amend --no-edit && git push && git push --tags",
    "doc:toc": "yarn markdown-toc --maxdepth 4 -i README.md",
    "sync:fork": "BRANCH=${BRANCH:-master}; git pull --rebase git@github.com:UnlyEd/GraphCMS-cache-boilerplate.git ${BRANCH}",
    "sync:fork:merge": "BRANCH=${BRANCH:-master}; git pull git@github.com:UnlyEd/GraphCMS-cache-boilerplate.git ${BRANCH}",
    "lint": "esw src/** -w",
    "lint:once": "eslint src/**",
    "lint:fix": "eslint src/** --fix",
    "lint:fix:preview": "eslint src/** --fix-dry-run",
    "test": "NODE_ENV=test yarn sls:dotenv && yarn delete:redis ; yarn start:redis:daemon && jest --runInBand --watchAll",
    "test:noredis": "NODE_ENV=test yarn sls:dotenv && jest --runInBand --watchAll",
    "test:once": "NODE_ENV=test yarn sls:dotenv && yarn delete:redis ; yarn start:redis:daemon && jest --runInBand --detectOpenHandles --forceExit && yarn stop:redis",
    "test:coverage": "NODE_ENV=test yarn sls:dotenv && yarn delete:redis ; yarn start:redis:daemon && jest --coverage --runInBand --detectOpenHandles --forceExit && yarn stop:redis"
  },
  "jest": {
    "setupFilesAfterEnv": [
      "./jest-preload.js",
      "jest-extended"
    ],
    "verbose": true
  },
  "dependencies": {
    "@unly/utils-simple-logger": "1.0.2",
    "apollo-cache-inmemory": "1.6.1",
    "apollo-client": "2.6.1",
    "apollo-link-http": "1.5.14",
    "deepmerge": "4.0.0",
    "dotenv": "8.0.0",
    "epsagon": "1.31.7",
    "esm": "3.2.25",
    "graphql": "14.3.1",
    "graphql-tag": "2.10.1",
    "inquirer": "6.3.1",
    "ioredis": "4.14.0",
    "lodash.filter": "4.6.0",
    "lodash.foreach": "4.5.0",
    "lodash.get": "4.4.2",
    "lodash.includes": "4.3.0",
    "lodash.map": "4.6.0",
    "lodash.startswith": "4.2.1",
    "log-symbols": "3.0.0",
    "moment": "2.24.0",
    "node-fetch": "2.6.0",
    "source-map-support": "0.5.12",
    "winston": "3.2.1"
  },
  "devDependencies": {
    "@babel/cli": "7.4.4",
    "@babel/core": "7.4.5",
    "@babel/preset-env": "7.4.5",
    "@unly/serverless-env-copy-plugin": "1.0.3",
    "babel-jest": "24.8.0",
    "babel-loader": "8.0.6",
    "babel-plugin-source-map-support": "2.0.1",
    "concurrently": "4.1.0",
    "cross-env": "5.2.0",
    "eslint": "6.3.0",
    "eslint-config-airbnb-base": "14.0.0",
    "eslint-plugin-import": "2.18.2",
    "eslint-plugin-jest": "22.17.0",
    "eslint-watch": "6.0.0",
    "git-revision-webpack-plugin": "3.0.3",
    "jest": "24.8.0",
    "jest-extended": "0.11.1",
    "markdown-toc": "1.2.0",
    "redis-cli": "1.3.1",
    "serverless": "1.49.0",
    "serverless-domain-manager": "3.2.2",
    "serverless-dotenv-plugin": "2.0.1",
    "serverless-offline": "5.7.2",
    "serverless-webpack": "5.3.1",
    "version-bump-prompt": "4.2.2",
    "wait-for-expect": "1.2.0",
    "webpack": "4.34.0",
    "webpack-node-externals": "1.7.2"
  }
}